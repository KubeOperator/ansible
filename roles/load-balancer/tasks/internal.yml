- name: CentOS | Install haproxy
  yum:
    name: haproxy
    state: present
  when: ansible_distribution in [ 'CentOS','RedHat','EulerOS','Kylin Linux Advanced Server' ]

- name: Debian | Install haproxy
  apt:
    name: haproxy
    state: present
  when: ansible_distribution in [ 'Ubuntu','Debian','Kylin' ]

- name: Create haproxy directory
  file: name=/etc/haproxy state=directory

- block:
  - name: Arm64 | Modify EulerOS haproxy.service
    template:
      src: haproxy/haproxy-euler.service.j2
      dest: /usr/lib/systemd/system/haproxy.service
    when: architectures == 'arm64'

  - name: Amd64 | Modify EulerOS haproxy.service
    template:
      src: haproxy/haproxy-centos.service.j2
      dest: /usr/lib/systemd/system/haproxy.service
    when: architectures == 'amd64'
  when: ansible_distribution in [ 'EulerOS' ]

- name: Modify CentOS haproxy.service
  template:
    src: haproxy/haproxy-centos.service.j2
    dest: /usr/lib/systemd/system/haproxy.service
  when: ansible_distribution in [ 'CentOS','RedHat' ]

- name: Modify Kylin Linux Advanced Server haproxy.service
  template:
    src: haproxy/haproxy-kylin-rpm.service.j2
    dest: /usr/lib/systemd/system/haproxy.service
  when: ansible_distribution in [ 'Kylin Linux Advanced Server' ]

- name: Modify Debian haproxy.service
  template:
    src: haproxy/haproxy-ubuntu.service.j2
    dest: /usr/lib/systemd/system/haproxy.service
  when: ansible_distribution in [ 'Ubuntu','Debian' ]

- name: Modify Kylin haproxy.service
  template:
    src: haproxy/haproxy-kylin-deb.service.j2
    dest: /lib/systemd/system/haproxy.service
  when: ansible_distribution in [ 'Kylin' ]

- name: Configuration haproxy
  template:
    src: haproxy/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg

- name: Systemctl daemon-reload
  systemd:
    daemon_reload: yes

- name: Enable haproxy service
  service:
    name: haproxy
    state: restarted
    enabled: yes

- name: Waiting for haproxy to running
  shell: "systemctl status haproxy.service|grep Active"
  register: haproxy_status
  until: '"running" in haproxy_status.stdout'
  retries: 8
  delay: 2