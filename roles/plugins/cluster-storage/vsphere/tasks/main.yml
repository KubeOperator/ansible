- block:
  - name: Download govc file
    get_url:
      url: "{{ govc_download_url }}"
      dest: "{{ base_dir }}/"
      timeout: "{{ download_timeout_online }}"

  - name: Unarchive govc file
    shell: "gunzip {{ base_dir }}/govc_linux_{{ architectures }}.gz"

  - name: Copy govc file
    copy:
      src: "{{ base_dir}}/govc_linux_{{ architectures }}"
      dest: "{{ bin_dir }}/govc"
      remote_src: yes
      mode: "0755"

  - name: Remove govc file
    file:
      name: "{{ base_dir }}/govc_linux_{{ architectures }}"
      state: absent

  - name: Create cloud-config directory
    file:
      name: "{{ cloud_config_dir }}"
      state: directory

  - name: Prepare vsphere.conf
    template:
      src: vsphere.conf.j2
      dest: "{{ cloud_config_dir }}/vsphere.conf"

  - name: Install jq
    yum:
      name:
      - jq

  - name: Prepare setup.sh
    template:
      src: setup.sh.j2
      dest: "{{ cloud_config_dir }}/setup.sh"

  - name: Set disk.enableuuid to true for all vms
    shell: "bash setup.sh"
    args:
      chdir: "{{ cloud_config_dir }}"
    run_once: true

  - name: Add cloud provider
    blockinfile:
      dest: "{{ item }}"
      block: |2
            - --cloud-provider=vsphere
            - --cloud-config={{ cloud_config_dir }}/vsphere.conf
      marker: "# {mark} add cloud provider"
      insertbefore: "image:"
    with_items:
    - /etc/kubernetes/manifests/kube-apiserver.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml

  - name: Add volumeMounts
    blockinfile:
      dest: "{{ item }}"
      block: |2
            - mountPath: {{ cloud_config_dir }}
              name: cloud-config
              readOnly: true
      marker: "# {mark} add volumeMounts"
      insertafter: "volumeMounts:"
    with_items:
    - /etc/kubernetes/manifests/kube-apiserver.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml

  - name: Add volumes
    blockinfile:
      dest: "{{ item }}"
      block: |2
          - hostPath:
              path: {{ cloud_config_dir }}
              type: DirectoryOrCreate
            name: cloud-config
      marker: "# {mark} add volumes"
      insertafter: "volumes:"
    with_items:
    - /etc/kubernetes/manifests/kube-apiserver.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml

  - name: Modify kubelet cloud provider params on worker
    lineinfile:
      dest: /etc/sysconfig/kubelet
      regexp: '^KUBELET_EXTRA_ARGS'
      line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs --cloud-provider=vsphere'
    delegate_to: "{{ item }}"
    with_items:
    - "{{ groups['kube-worker'] }}"
    - "{{ groups['new-worker'] }}"
    run_once: true

  - name: Restart kubelet on worker
    shell: "systemctl daemon-reload && systemctl restart kubelet"
    delegate_to: "{{ item }}"
    with_items:
    - "{{ groups['kube-worker'] }}"
    - "{{ groups['new-worker'] }}"
    run_once: true

  - name: Modify kubelet cloud provider params on master
    lineinfile:
      dest: /etc/sysconfig/kubelet
      regexp: '^KUBELET_EXTRA_ARGS'
      line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs --cloud-provider=vsphere --cloud-config={{ cloud_config_dir }}/vsphere.conf'

  - name: Restart kubelet on master
    shell: "systemctl daemon-reload && systemctl restart kubelet"
  when:
  - architectures == 'amd64'