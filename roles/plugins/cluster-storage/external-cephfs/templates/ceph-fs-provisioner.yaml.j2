---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ storage_fs_provisioner_name }}
  namespace: {{ provisioner_namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ storage_fs_provisioner_name }}
  namespace: {{ provisioner_namespace }}
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["kube-dns","coredns"]
    verbs: ["list", "get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ storage_fs_provisioner_name }}
subjects:
  - kind: ServiceAccount
    name: {{ storage_fs_provisioner_name }}
    namespace: {{ provisioner_namespace }}
roleRef:
  kind: ClusterRole
  name: {{ storage_fs_provisioner_name }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ storage_fs_provisioner_name }}
  namespace: {{ provisioner_namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "delete"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ storage_fs_provisioner_name }}
  namespace: {{ provisioner_namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ storage_fs_provisioner_name }}
subjects:
- kind: ServiceAccount
  name: {{ storage_fs_provisioner_name }}
  namespace: {{ provisioner_namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ storage_fs_provisioner_name }}
  namespace: {{ provisioner_namespace }}
  labels:
    app: fs-provisioner
    version: {{ fs_provisioner_version}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ storage_fs_provisioner_name }}
      version: {{ fs_provisioner_version}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ storage_fs_provisioner_name }}
        version: {{ fs_provisioner_version}}
    spec:
      containers:
      - name: cephfs-provisioner
        image: {{ fs_provisioner_image }}
        env:
        - name: PROVISIONER_NAME
          value: {{ storage_fs_provisioner_name }}
        - name: PROVISIONER_SECRET_NAMESPACE
          value: {{ provisioner_namespace }}
        command:
        - "/usr/local/bin/cephfs-provisioner"
        args:
        - "-id=cephfs-provisioner-1"
      serviceAccount: {{ storage_fs_provisioner_name }}
