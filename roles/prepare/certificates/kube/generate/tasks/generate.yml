# 生成共用的certificate或秘钥
- name: Create kubernetes certificate request configuration
  template: 
    src: kube-openssl.cnf.j2
    dest: "{{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf"
    owner: root
    mode: 0644

- name: Create kubernetes-ca root certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key 2048"
  when: ca_key_stat.stat.isreg is not defined

- name: Create kubernetes-ca root certificate
  shell: >
    openssl req -x509 -new -nodes
    -extensions v3_ca -subj "/CN=kubernetes"
    -config {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -days {{ certs_expired }}
  when: ca_crt_stat.stat.isreg is not defined

- name: Create front-proxy-ca certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-ca.key 2048"
  when: front_proxy_ca_key_stat.stat.isreg is not defined

- name: Create front-proxy-ca root certificate
  shell: >
    openssl req -x509 -new -nodes
    -extensions v3_ca -subj "/CN=kubernetes"
    -config {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-ca.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-ca.crt
    -days {{ certs_expired }}
  when: front_proxy_ca_crt_stat.stat.isreg is not defined

- name: Create apiserver certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver.key 2048"
  when: apiserver_key_stat.stat.isreg is not defined

- name: Create apiserver certificate request
  shell: >
    openssl req -new 
    -subj "/CN=kube-apiserver" 
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver.csr
  
- name: Create apiserver certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_server 
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver.crt
    -days {{ certs_expired }}

- name: Create apiserver-kubelet-client certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver-kubelet-client.key 2048"
  when: apiserver_kubelet_client_key_stat.stat.isreg is not defined

- name: Create apiserver-kubelet-client certificate request
  shell: >
    openssl req -new 
    -subj "/CN=kube-apiserver-kubelet-client/O=system:masters"
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver-kubelet-client.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver-kubelet-client.csr

- name: Create apiserver-kubelet-client certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_client 
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver-kubelet-client.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/apiserver-kubelet-client.crt
    -days {{ certs_expired }}

- name: Create front-proxy-client certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-client.key 2048"
  when: front_proxy_client_key_stat.stat.isreg is not defined

- name: Create front-proxy-client certificate request
  shell: >
    openssl req -new 
    -subj "/CN=front-proxy-client"
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-client.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-client.csr

- name: Create front-proxy-client certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_client 
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-client.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/front-proxy-client.crt
    -days {{ certs_expired }}

- name: Create kube-scheduler certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/kube-scheduler.key 2048"
  when: kube_scheduler_key_stat.stat.isreg is not defined

- name: Create kube-scheduler certificate request
  shell: >
    openssl req -new 
    -subj "/CN=system:kube-scheduler" 
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/kube-scheduler.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/kube-scheduler.csr

- name: Create kube-scheduler certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_client 
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/kube-scheduler.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/kube-scheduler.crt
    -days {{ certs_expired }}

- name: Create sa certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/sa.key 2048"
  when: sa_key_stat.stat.isreg is not defined

- name: Generate the public key from the sa private key
  shell: "openssl rsa -in {{ playbook_dir }}/{{ cluster_name }}/pki/sa.key -pubout -out {{ playbook_dir }}/{{ cluster_name }}/pki/sa.pub"
  when: sa_pud_stat.stat.isreg is not defined

- name: link sa certificate private key to kube-controller-manager certificate private key
  file: 
    src: "{{ playbook_dir }}/{{ cluster_name }}/pki/sa.key"
    dest: "{{ playbook_dir }}/{{ cluster_name }}/pki/kube-controller-manager.key"
    state: link

- name: Create kube-controller-manager certificate request
  shell: >
    openssl req -new 
    -subj "/CN=system:kube-controller-manager" 
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/sa.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/kube-controller-manager.csr

- name: Create kube-controller-manager certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_client 
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/kube-controller-manager.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/kube-controller-manager.crt
    -days {{ certs_expired }}

- name: Create kubernetes cluster admin certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/admin.key 2048"
  when: admin_key_stat.stat.isreg is not defined

- name: Create kubernetes cluster admin certificate request
  shell: >
    openssl req -new 
    -subj "/CN=kubernetes-admin/O=system:masters"
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/admin.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/admin.csr

- name: Create kubernetes cluster admin certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_client
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/admin.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/admin.crt
    -days {{ certs_expired }}

- name: Create kubelet certificate private key
  shell: "openssl genrsa -out {{ playbook_dir }}/{{ cluster_name }}/pki/kubelet.key 2048"
  when: kubelet_key_stat.stat.isreg is not defined

- name: Create kubelet certificate request
  shell: >
    openssl req -new 
    -subj "/CN=kubelet"
    -key {{ playbook_dir }}/{{ cluster_name }}/pki/kubelet.key
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/kubelet.csr
  
- name: Create kubelet server certificate
  shell: >
    openssl x509 -req -CAcreateserial 
    -extensions v3_req_kubelet 
    -extfile {{ playbook_dir }}/{{ cluster_name }}/pki/kube-openssl.cnf
    -CA {{ playbook_dir }}/{{ cluster_name }}/pki/ca.crt
    -CAkey {{ playbook_dir }}/{{ cluster_name }}/pki/ca.key
    -in {{ playbook_dir }}/{{ cluster_name }}/pki/kubelet.csr
    -out {{ playbook_dir }}/{{ cluster_name }}/pki/kubelet.crt
    -days {{ certs_expired }}

- name: Retrieves the control node request file that needs to be cleaned
  find:
    paths: "{{ playbook_dir }}/{{ cluster_name }}/pki/"
    patterns: '*.csr'
  register: files_to_purge_for_csr

- name: Clean up control node certificate request file
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_purge_for_csr.files }}"

- name: Clean up kubelet certificate request file
  file:
    path: "{{ playbook_dir }}/{{ cluster_name }}/pki/kubelet.csr"
    state: absent